{"name":"Propeller","tagline":"Database-backed job queue system with throttling","body":"# Propeller\r\n\r\n## Installation\r\n\r\nRun `rails g propeller:install` and you'll get:\r\n\r\n### Initializer\r\n\r\nThis file configures Propeller for your setup:\r\n\r\n```ruby\r\nPropeller.config do |c|\r\n  c.worker_job_class_name = \"WorkerJob\"\r\n  c.throttle_limits       = {\r\n    1.minute => 14\r\n  }\r\n  c.polling_interval      = 2.seconds\r\n  c.throttle_interval     = 1.second\r\n  c.idle_period           = 5.minutes\r\nend\r\n```\r\n\r\n### Admin Panel\r\n\r\nThis line adds the Propeller admin panel `config/routes.rb`:\r\n\r\n```ruby\r\nMyApp::Application.routes.draw do\r\n  mount Propeller::Engine => \"/propeller\"\r\nend\r\n```\r\n\r\n### Worker Job table\r\n\r\nThis is how your jobs table will look in the database:\r\n\r\n```ruby\r\n  create_table \"worker_jobs\", force: true do |t|\r\n    t.timestamp \"created_at\",          null: false\r\n    t.timestamp \"updated_at\",          null: false\r\n    t.timestamp \"started_at\",          null: false\r\n    t.timestamp \"ended_at\",            null: false\r\n    t.datetime  \"started_at_beginning_of_hour\"\r\n    t.datetime  \"started_at_beginning_of_minute\"\r\n    t.string    \"status\"\r\n    t.datetime  \"scheduled_for\"\r\n    t.date      \"scheduled_for_date\"\r\n    t.date      \"started_at_beginning_of_day\"\r\n  end\r\n```\r\n\r\n### Job Failures table\r\n\r\nWhenever a job fails, it'll get logged to the database as well:\r\n\r\n```ruby\r\n  create_table \"job_failures\", force: true do |t|\r\n    t.integer  \"worker_job_id\"\r\n    t.string   \"error_class\"\r\n    t.text     \"backtrace\"\r\n    t.text     \"message\"\r\n    t.datetime \"created_at\"\r\n    t.datetime \"updated_at\"\r\n  end\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}